import org.apache.tools.ant.filters.ReplaceTokens
import groovy.io.FileType

import java.nio.file.Files


plugins {
    id 'java'
    id 'java-library'
    id "com.github.johnrengelman.shadow" version "7.1.2"

}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://datakin.jfrog.io/artifactory/maven-public-libs-snapshot'
    }
}

configurations {
    lombok
}

ext {
    assertjVersion = '3.20.2'
    bigqueryVersion = '0.21.1'
    junit5Version = '5.7.2'
    sparkVersion = '3.1.2'
    jacksonVersion = '2.10.0'
    postgresqlVersion = '42.2.19'
    lombokVersion = '1.18.20'
    mockitoVersion = '3.11.2'
    testcontainersVersion = '1.15.3'
    isReleaseVersion = !version.endsWith('SNAPSHOT')
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation("io.openlineage:openlineage-java:${project.version}"){
        exclude group: 'com.fasterxml.jackson'
    }
    implementation(project(":shared"))


    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.module:jackson-module-scala_2.12:${jacksonVersion}"
    compileOnly "com.google.cloud.spark:spark-bigquery_2.12:${bigqueryVersion}"
    compileOnly "com.google.cloud.spark:spark-bigquery-with-dependencies_2.12:${bigqueryVersion}"
    implementation "org.apache.spark:spark-core_2.12:${sparkVersion}"
    implementation "org.apache.spark:spark-sql_2.12:${sparkVersion}"
    implementation "org.apache.spark:spark-hive_2.12:${sparkVersion}"
    implementation "org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}"
    implementation "org.apache.iceberg:iceberg-spark3-runtime:0.12.1"
    implementation "io.delta:delta-core_2.12:1.0.0"
    implementation "com.databricks:dbutils-api_2.12:0.0.5"

    testImplementation platform('org.junit:junit-bom:5.7.1')
    testImplementation "org.postgresql:postgresql:${postgresqlVersion}"
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation('org.xerial:sqlite-jdbc:3.34.0')
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
    testImplementation "org.testcontainers:mockserver:${testcontainersVersion}"
    testImplementation "org.testcontainers:kafka:${testcontainersVersion}"
    testImplementation "org.apache.kafka:kafka-clients:2.6.0"
    testImplementation('org.mock-server:mockserver-client-java:5.12.0') {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.fasterxml.jackson.core'
        exclude group: 'com.fasterxml.jackson.datatype'
        exclude group: 'com.fasterxml.jackson.dataformat'
    }
    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.1.1'
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${junit5Version}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junit5Version}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    testImplementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    testImplementation "com.fasterxml.jackson.module:jackson-module-scala_2.12:${jacksonVersion}"
    testImplementation "org.apache.spark:spark-core_2.12:${sparkVersion}"
    testImplementation "org.apache.spark:spark-sql_2.12:${sparkVersion}"
    testImplementation "org.apache.spark:spark-hive_2.12:${sparkVersion}"
    testImplementation "org.apache.spark:spark-catalyst_2.12:${sparkVersion}"
    testImplementation "org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}"
    testImplementation "org.apache.iceberg:iceberg-spark3-runtime:0.12.1"
    testImplementation "io.delta:delta-core_2.12:1.0.0"
    testImplementation "com.google.cloud.spark:spark-bigquery-with-dependencies_2.12:${bigqueryVersion}"


    lombok "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

}

test {
    useJUnitPlatform {
        excludeTags 'integration-test'
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags "integration-test"
    }
    dependsOn shadowJar
}

assemble {
    dependsOn shadowJar
}


shadowJar {

    minimize()
    classifier = ''
    dependencies {
        exclude(dependency('org.slf4j::'))
    }

    zip64 true
}
